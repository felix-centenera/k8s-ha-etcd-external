# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "almalinux/8"

  # Configuraci<97>n de IPs iniciales
  base_ip_masters = 149
  base_ip_etcd = 152
  base_ip_workers = 155  # Aseg<9c>rate de que no haya conflicto entre rangos de IPs


  config.vm.define "lbone" do |lbone|
      lbone.vm.box = "almalinux/8"
      lbone.vm.hostname = "lb-one.192.168.1.149.nip.io"
      lbone.vm.network "public_network",bridge:"eno1",ip: "192.168.1.149"
      lbone.vm.provision "shell", path: "./nodes/config.sh"
      lbone.vm.provider "virtualbox" do |v|
          v.customize ['modifyvm', :id, '--groups', '/k8svanilla/LB']
          v.name = "lb-one-k8s"
          v.memory = 512
          v.cpus = 1
      end
  end

  # Configuraci<97>n de masters
  (1..3).each do |i|
    config.vm.define "master#{i}-almalinux8-k8s" do |master|
      master.vm.provider "virtualbox" do |vb|
        vb.name = "master#{i}-almalinux8-k8s"
        vb.cpus = 1
        vb.memory = "3072"
        vb.customize ['modifyvm', :id, '--groups', '/k8svanilla/master']
      end
      master.vm.hostname = "master#{i}.192.168.1.#{base_ip_masters + i}.nip.io"
      master.vm.network "public_network", bridge:"eno1", ip: "192.168.1.#{base_ip_masters + i}"
      master.vm.disk :disk, size: "40GB", primary: true
      master.vm.provision "shell", path: "./nodes/config.sh"
    end
  end


   # Configuraci<97>n de etcd 
   (1..3).each do |i|
    config.vm.define "etcd#{i}-almalinux8-k8s" do |etcd|
      etcd.vm.provider "virtualbox" do |vb|
        vb.name = "etcd#{i}-almalinux8-k8s"
        vb.cpus = 1
        vb.memory = "3072"
        vb.customize ['modifyvm', :id, '--groups', '/k8svanilla/etcd']
      end
      etcd.vm.hostname = "etcd#{i}.192.168.1.#{base_ip_etcd + i}.nip.io"
      etcd.vm.network "public_network", bridge:"eno1", ip: "192.168.1.#{base_ip_etcd + i}"
      etcd.vm.disk :disk, size: "15GB", primary: true
      etcd.vm.provision "shell", path: "./nodes/config.sh"
    end
  end

  # Configuraci<97>n de workers
  (1..2).each do |i|  # Ajusta el rango para m<87>s workers
    config.vm.define "worker#{i}-almalinux8-k8s" do |worker|
      worker.vm.provider "virtualbox" do |vb|
        vb.name = "worker#{i}-almalinux8-k8s"
        vb.cpus = 1
        vb.memory = "3072"
        vb.customize ['modifyvm', :id, '--groups', '/k8svanilla/workers']
      end
      worker.vm.hostname = "worker#{i}.192.168.1.#{base_ip_workers + i}.nip.io"
      worker.vm.network "public_network", bridge:"eno1", ip: "192.168.1.#{base_ip_workers + i}"
      worker.vm.disk :disk, size: "20GB", primary: true
      worker.vm.provision "shell", path: "./nodes/config.sh"
    end
  end



  config.vm.define "bastion" do |bastion|
      bastion.vm.provision "file", source: "./password/password.txt", destination: "/tmp/password.txt"
      bastion.vm.provision "file", source: "./ansible_conf/ansible.cfg", destination: "/tmp/ansible.cfg"
      bastion.vm.provision "file", source: "../ansible", destination: "/tmp/"  
      bastion.vm.box = "almalinux/8"
      bastion.vm.hostname = "bastion.192.168.1.159.nip.io"
      bastion.vm.network "public_network",bridge:"eno1",ip: "192.168.1.159"
      bastion.vm.provision "shell", path: "./nodes/configbastion"
      bastion.vm.provider "virtualbox" do |v|
          v.customize ['modifyvm', :id, '--groups', '/k8svanilla/bastion']
          v.name = "bastion-k8s"
          v.memory = 512
          v.cpus = 1
      end
  end

end